FROM node:20-bullseye-slim

ARG N8N_VERSION=latest

# Check if N8N_VERSION is provided and print it
RUN echo "N8N_VERSION is set to: ${N8N_VERSION}"

# Install dependencies
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    procps \
    libgtk2.0-0 \
    libgtk-3-0 \
    libgbm-dev \
    libnotify-dev \
    libgconf-2-4 \
    libnss3 \
    libxss1 \
    libasound2 \
    libxtst6 \
    xauth \
    xvfb \
    tini \
    graphicsmagick \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*


# Set up environment for Puppeteer and Chrome
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
ENV CHROME_BIN=/usr/bin/google-chrome-stable
ENV CHROME_PATH=/usr/lib/google-chrome/
ENV NODE_ICU_DATA=/usr/local/lib/node_modules/full-icu

# Set default environment variables
ENV NODE_ENV=production
ENV N8N_PATH=/
ENV GENERIC_TIMEZONE=Europe/London
ENV TZ=Europe/London

EXPOSE 5678

# Set up directories and permissions
RUN mkdir -p /home/node/.n8n && chown -R node:node /home/node/.n8n


# Copy and set permissions for entrypoint script
COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

# Switch to non-root user
USER node
WORKDIR /home/node

# Install n8n and full-icu globally as root
RUN npm install n8n@${N8N_VERSION} full-icu && npm cache clean --force

# Verify n8n installation
RUN n8n --version

ENTRYPOINT ["tini", "--", "/docker-entrypoint.sh"]
CMD ["n8n", "start"]
